;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[nil nil #4=(headline (:standard-properties [29 29 40 247 247 0 (:title) nil element t nil 42 245 1 nil nil nil #2=(org-data (:standard-properties [1 1 1 272 272 0 nil org-data nil t nil 3 272 nil nil nil nil nil] :path "/home/kzheng/Documents/org/more/learn-elisp.org" :fragile-cache nil :CATEGORY "learn-elisp"))] :pre-blank 1 :raw-value #1=[org-element-deferred org-element--headline-parse-title (t) t] :title #1# :level #1# :priority #1# :tags #1# :todo-keyword #1# :todo-type #1# :footnote-section-p #1# :archivedp #1# :commentedp #1# :fragile-cache nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #2# 0] [nil nil (keyword (:standard-properties [1 1 nil nil 29 1 nil top-comment element t nil nil nil nil nil nil nil #3=(section (:standard-properties [1 1 1 29 29 0 nil first-section element t nil 1 29 nil nil nil nil #2#]))] :key "TITLE" :value "Learn emacs lisp")) 0] #3# 0] [[nil nil #5=(section (:standard-properties [40 40 40 247 247 0 nil section element t nil 40 247 nil nil nil nil #4#])) 0] [nil nil (keyword (:standard-properties [235 235 nil nil 247 1 nil nil element t nil nil nil nil nil nil nil #5#] :key "RESULTS" :value "")) 0] (src-block (:standard-properties [40 40 nil nil 235 1 nil planning element t nil nil nil nil nil nil nil #5#] :language "emacs-lisp" :switches nil :parameters ":results output" :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value [org-element-deferred org-element--unescape-substring (40 184) t])) 0] #4# 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))