;;   -*- mode: lisp-data; -*-
(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[nil nil #18=(headline (:standard-properties [145 145 161 930 930 0 (:title) nil element t nil 226 928 1 nil nil nil #2=(org-data (:standard-properties [1 1 1 4885 4885 0 nil org-data nil t nil 3 4885 nil nil nil nil nil] :path "/home/kzheng/dotfiles/.config/emacs/phi/.emacs.d/config.org" :CATEGORY "config" :fragile-cache nil))] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 15) t] :title [org-element-deferred org-element-property-2 (:raw-value) nil] :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p [org-element-deferred org-element--headline-footnote-section-p nil nil] :archivedp [org-element-deferred org-element--headline-archivedp nil nil] :commentedp nil :HEADER-ARGS:EMACS-LISP ":tangle early-init.el" :fragile-cache nil)) 0] [nil nil #24=(headline (:standard-properties [1001 1001 1010 1123 1123 0 #1=(:title) nil element t nil 1012 1121 2 nil nil nil #6=(headline (:standard-properties [930 930 940 3555 3555 0 #1# nil element t nil 999 3553 1 nil nil nil #2#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 9) t] :title #3=[org-element-deferred org-element-property-2 (:raw-value) nil] :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4=[org-element-deferred org-element--headline-footnote-section-p nil nil] :archivedp #5=[org-element-deferred org-element--headline-archivedp nil nil] :commentedp nil :HEADER-ARGS:EMACS-LISP ":tangle init.el" :fragile-cache nil))] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 8) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) 0] #6# 0] [[[nil nil #28=(headline (:standard-properties [1812 1812 1823 2101 2101 0 #7=(:title) nil element t nil 1825 2099 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 10) t] :title #8=[org-element-deferred org-element-property-2 (:raw-value) nil] :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #9=[org-element-deferred org-element--headline-footnote-section-p nil nil] :archivedp #10=[org-element-deferred org-element--headline-archivedp nil nil] :commentedp nil)) 0] nil #30=(headline (:standard-properties [2101 2101 2121 2382 2382 0 #1# nil element t nil 2123 2380 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 19) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) -1] [[nil nil #35=(headline (:standard-properties [3089 3089 3115 3471 3471 0 #7# nil element t nil 3117 3469 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 25) t] :title #8# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #9# :archivedp #10# :commentedp nil)) 0] nil #36=(headline (:standard-properties [3471 3471 3478 3555 3555 0 #1# nil element t nil 3480 3553 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 6) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) -1] #31=(headline (:standard-properties [2382 2382 2405 3089 3089 0 #1# nil element t nil 2407 3087 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 22) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil :fragile-cache nil)) 0] #27=(headline (:standard-properties [1123 1123 1137 1812 1812 0 #1# nil element t nil 1139 1810 2 nil nil nil #6#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 13) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil :fragile-cache nil)) 1] [[nil nil #40=(headline (:standard-properties [3636 3636 3645 3743 3743 0 #1# nil element t nil 3647 3741 2 nil nil nil #11=(headline (:standard-properties [3555 3555 3568 4267 4267 0 #1# nil element t nil 3635 4265 1 nil nil nil #2#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 12) t] :title #3# :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil :HEADER-ARGS:EMACS-LISP ":tangle lisp/init-ui.el" :fragile-cache nil))] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 8) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) 0] [[nil nil #44=(headline (:standard-properties [3825 3825 3833 4002 4002 0 #1# nil element t nil 3835 4002 2 nil #13=[org-element-deferred org-element--headline-deferred nil t] nil #11#] :pre-blank 0 :raw-value #12=[org-element-deferred org-element--headline-parse-title (t) t] :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] nil #47=(headline (:standard-properties [4002 4002 4012 4178 4178 0 #1# nil element t nil 4014 4176 2 nil nil nil #11#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 9) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) -1] #43=(headline (:standard-properties [3743 3743 3752 3825 3825 0 #1# nil element t nil 3754 3823 2 nil nil nil #11#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 8) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil :fragile-cache nil)) 1] #11# -1] [[[nil nil #14=(headline (:standard-properties [4267 4267 4291 4885 4885 0 #1# nil element t nil 4293 4885 1 nil #13# nil #2#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (2 23) t] :title #8# :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #9# :archivedp #10# :commentedp nil)) 0] [nil nil #15=(headline (:standard-properties [4436 4436 4455 4885 4885 0 #1# nil element t nil 4457 4885 2 nil #13# nil #14#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] #51=(headline (:standard-properties [4291 4291 4312 4436 4436 0 #1# section element t nil 4314 4436 2 nil #13# nil #14#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] [[nil nil #16=(headline (:standard-properties [4476 4476 4489 4674 4674 0 #1# nil element t nil 4491 4674 3 nil #13# nil #15#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] [[nil nil #58=(headline (:standard-properties [4603 4603 4613 4643 4643 0 #1# nil element t nil 4615 4643 4 nil #13# nil #16#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] [nil nil #63=(headline (:standard-properties [4871 4871 nil nil 4885 0 #1# nil element t nil nil nil 3 nil #13# nil #15#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] #64=(headline (:standard-properties [4674 4674 nil nil 4702 0 #1# nil element t nil nil nil 3 nil #13# nil #15#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 0] #57=(headline (:standard-properties [4489 4489 nil nil 4501 0 #1# section element t nil nil nil 4 nil #13# nil #16#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 1] #56=(headline (:standard-properties [4455 4455 nil nil 4476 0 #1# section element t nil nil nil 3 nil #13# nil #15#] :pre-blank 0 :raw-value #12# :title #12# :level #12# :priority #12# :tags #12# :todo-keyword #12# :todo-type #12# :footnote-section-p #12# :archivedp #12# :commentedp #12#)) 1] #49=(headline (:standard-properties [4178 4178 4185 4267 4267 0 #1# nil element t nil 4187 4265 2 nil nil nil #11#] :pre-blank 0 :raw-value [org-element-deferred org-element--headline-raw-value (3 6) t] :title #3# :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :footnote-section-p #4# :archivedp #5# :commentedp nil)) -1] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[[nil nil #2# 0] [nil nil (keyword (:standard-properties [1 1 nil nil 34 0 nil top-comment element t nil nil nil nil nil nil nil #17=(section (:standard-properties [1 1 1 145 145 0 nil first-section element t nil 1 145 nil nil nil nil #2#]))] :key "TITLE" :value "Configuration of Emacs")) 0] #17# 0] [[nil nil (keyword (:standard-properties [58 58 nil nil 77 0 nil nil element t nil nil nil nil nil nil nil #17#] :key "DATE" :value "2025/05/04")) 0] [nil nil (keyword (:standard-properties [97 97 nil nil 145 1 nil nil element t nil nil nil nil nil nil nil #17#] :key "PROPERTY" :value "header-args:emacs-lisp :tangle yes")) 0] (keyword (:standard-properties [77 77 nil nil 97 0 nil nil element t nil nil nil nil nil nil nil #17#] :key "STARTUP" :value "overview")) 0] (keyword (:standard-properties [34 34 nil nil 58 0 nil nil element t nil nil nil nil nil nil nil #17#] :key "AUTHOR" :value "Kazupre Zheng")) 0] [[nil nil #19=(section (:standard-properties [161 161 161 930 930 0 nil section element t nil 161 930 nil nil nil nil #18#] :fragile-cache nil)) 0] [nil nil (node-property (:standard-properties [174 174 nil nil 221 0 nil node-property element t nil nil nil nil nil nil nil #20=(property-drawer (:standard-properties [161 161 174 221 227 0 nil planning element t nil nil nil nil nil nil nil #19#]))] :key #21="header-args:emacs-lisp" :value ":tangle early-init.el")) 0] #20# 0] #18# -1] [[[nil [nil nil #6# 0] (src-block (:standard-properties [260 260 nil nil 930 1 nil nil element t nil nil nil nil nil nil nil #19#] :language #26="emacs-lisp" :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;;; early-init.el --- Emacs Pre-initializtion config\12  ;;; Commentary:\12\12  ;;; Code:\12\12  ;; garbage\12  (let ((gc-cons-threshold most-positive-fixnum)\12        (gc-cons-percentage 0.6)\12        (file-name-handler-alist nil)))\12\12  \12  ;; Some Basic UI\12  (menu-bar-mode -1)\12  (tool-bar-mode -1)\12  (scroll-bar-mode -1)\12\12\12  (setq make-backup-files nil) ; do not backup~\12\12  ;; open config soon\12  (defun open-my-emacs-config()\12    (interactive)\12    (find-file \"~/.emacs.d/config.org\"))\12  (global-set-key (kbd \"<f2>\") 'open-my-emacs-config)\12\12  ;;  (add-subdirs-to-load-path \"~/.emacs.d/lisp\")\12\12  (provide 'early-init)\12  ;;; early-init.el ends here\12")) 1] [nil [nil nil (node-property (:standard-properties [953 953 nil nil 994 0 nil node-property element t nil nil nil nil nil nil nil #22=(property-drawer (:standard-properties [940 940 953 994 1001 1 nil planning element t nil nil nil nil nil nil nil #23=(section (:standard-properties [940 940 940 1001 1001 0 nil section element t nil 940 1001 nil nil nil nil #6#]))]))] :key #21# :value ":tangle init.el")) 0] #22# 1] #23# 0] [[nil nil #25=(section (:standard-properties [1010 1010 1010 1123 1123 0 nil section element t nil 1010 1123 nil nil nil nil #24#])) 0] nil (src-block (:standard-properties [1010 1010 nil nil 1123 1 nil planning element t nil nil nil nil nil nil nil #25#] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;;; init.el --- The main init entry for Emacs\12  ;;; Commentary:\12\12  ;;; Code:\12")) -1] #24# -1] (paragraph (:standard-properties [227 227 227 259 260 1 nil nil element t nil nil nil nil nil nil nil #19#])) 0] [[[[nil nil #29=(section (:standard-properties [1137 1137 1137 1812 1812 0 nil section element t nil 1137 1812 nil nil nil nil #27#] :fragile-cache nil)) 0] [[nil nil #28# 0] nil #33=(section (:standard-properties [1823 1823 1823 2101 2101 0 nil section element t nil 1823 2101 nil nil nil nil #28#] :fragile-cache nil)) -1] (src-block (:standard-properties [1137 1137 nil nil 1812 1 nil planning element t nil nil nil nil nil nil nil #29#] :language #34="emacs-lisp" :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (setq\12   ;; do not resize \12   frame-inhibit-implied-resize t\12   ;; fundamental\12   initial-major-mode 'fundamental-mode)\12   ;; not enable package automatically\12;   package-enable-at-startup nil\12;   package-quickstart nil)\12\12  (setq inhibit-splash-screen t) ; no welcome screen\12  ;; do not load in package cache\12\12\12    ;; make windows more fluent\12  (setq frame-inhibit-implied-resize t)\12  (setq-default inhibit-redisplay t\12                  inhibit-message t)\12  (add-hook 'window-setup-hook\12            (lambda ()\12              (setq-default inhibit-redisplay nil\12                            inhibit-message nil)\12              (redisplay)))\12\12")) 1] [[nil nil #30# 0] [[nil nil (src-block (:standard-properties [2121 2121 nil nil 2382 0 nil planning element t nil nil nil nil nil nil nil #32=(section (:standard-properties [2121 2121 2121 2382 2382 0 nil section element t nil 2121 2382 nil nil nil nil #30#]))] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (require 'package)\12  (setq package-archives\12  \11  '((\"melpa\"  . \"https://melpa.org/packages/\")\12  \11    (\"gnu\"    . \"https://elpa.gnu.org/packages/\")\12  \11    (\"nongnu\" . \"https://elpa.nongnu.org/nongnu/\")))\12  (package-initialize)\12")) 0] nil #31# -1] #32# 1] (src-block (:standard-properties [1823 1823 nil nil 2101 0 nil planning element t nil nil nil nil nil nil nil #33#] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (let ((dir (locate-user-emacs-file \"lisp\")))\12    (add-to-list 'load-path (file-name-as-directory dir)))\12\12  ;; 加载各模块化配置\12  ;; 不要在`*message*'缓冲区显示加载模块化配置的信息\12  (with-temp-message \"\"\12    (require 'init-ui)                    ; 加载UI交互的模块化配置文件\12    )\12")) 0] [[[[nil nil (src-block (:standard-properties [2405 2405 nil nil 3089 0 nil planning element t nil nil nil nil nil nil nil #39=(section (:standard-properties [2405 2405 2405 3089 3089 0 nil section element t nil 2405 3089 nil nil nil nil #31#] :fragile-cache nil))] :language #34# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; install 'use-package'\12  (unless (package-installed-p 'use-package)\12    (package-refresh-contents)\12    (package-install 'use-package))\12  ;; config `use-package'\12  (eval-and-compile\12;    (setq use-package-always-ensure nil)\12    (setq use-package-always-defer nil)\12    (setq use-package-expand-minimally nil)\12    (setq use-package-enable-imenu-support t)\12    (if (daemonp)\12  \11  (setq use-package-always-demand t)))\12\12  (eval-when-compile\12    (require 'use-package))\12\12  ;; install `use-package' other modules\12  (use-package use-package-ensure-system-package\12    :ensure t)\12  (use-package diminish\12    :ensure t)\12  (use-package bind-key\12    :ensure t)\12")) 0] [nil nil #37=(section (:standard-properties [3115 3115 3115 3471 3471 0 nil section element t nil 3115 3471 nil nil nil nil #35#])) 0] #35# 0] [nil nil #36# 0] (src-block (:standard-properties [3115 3115 nil nil 3471 0 nil planning element t nil nil nil nil nil nil nil #37#] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; install `quelpa'\12  (use-package quelpa\12    :ensure t\12    :commands quelpa\12    :config\12    :custom\12    (quelpa-git-clone-depth 1)\12    (quelpa-update-melpa-p nil)\12    (quelpa-self-upgrade-p nil)\12    (quelpa-checkout-melpa-p nil))\12\12  ;; combine `quelpa' and `use-package'\12  (use-package quelpa-use-package\12    :ensure t)\12")) -1] [nil [nil nil #11# 0] (src-block (:standard-properties [3478 3478 nil nil 3555 1 nil planning element t nil nil nil nil nil nil nil #38=(section (:standard-properties [3478 3478 3478 3555 3555 0 nil section element t nil 3478 3555 nil nil nil nil #36#]))] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (provide 'init)\12\12  ;;; init.el ends here\12")) 1] #38# -1] #39# 0] #27# 0] [[[[[[nil nil #41=(property-drawer (:standard-properties [3568 3568 3581 3630 3636 0 nil planning element t nil nil nil nil nil nil nil #67=(section (:standard-properties [3568 3568 3568 3636 3636 0 nil section element t nil 3568 3636 nil nil nil nil #11#]))])) 0] [nil nil #40# 0] (node-property (:standard-properties [3581 3581 nil nil 3630 0 nil node-property element t nil nil nil nil nil nil nil #41#] :key "header-args:emacs-lisp" :value ":tangle lisp/init-ui.el")) 0] [nil nil (src-block (:standard-properties [3645 3645 nil nil 3743 0 nil planning element t nil nil nil nil nil nil nil #42=(section (:standard-properties [3645 3645 3645 3743 3743 0 nil section element t nil 3645 3743 nil nil nil nil #40#]))] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;;; init-ui.el --- UI settings\12  ;;; Commentary:\12\12  ;;; Code:\12\12")) 0] #42# -1] [[[nil nil #45=(section (:standard-properties [3752 3752 3752 3825 3825 0 nil section element t nil 3752 3825 nil nil nil nil #43#])) 0] [nil nil #44# 0] (src-block (:standard-properties [3752 3752 nil nil 3825 0 nil planning element t nil nil nil nil nil nil nil #45#] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (load-theme 'modus-operandi-tinted t)\12")) 0] [nil [nil nil (paragraph (:standard-properties [3885 3885 3885 4000 4002 2 nil nil element t nil nil nil nil nil nil nil #46=(section (:standard-properties [3833 3833 3833 4002 4002 0 nil section element t nil 3833 4002 nil nil nil nil #44#]))])) 0] (paragraph (:standard-properties [3833 3833 3833 3884 3885 1 nil planning element t nil nil nil nil nil nil nil #46#])) 1] #46# 0] #43# 0] [[nil [nil nil (src-block (:standard-properties [4012 4012 nil nil 4178 0 nil planning element t nil nil nil nil nil nil nil #48=(section (:standard-properties [4012 4012 4012 4178 4178 0 nil section element t nil 4012 4178 nil nil nil nil #47#]))] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  ;; paste at the cursor\12  (setq mouse-yank-at-point t)\12\12  ;; copy and cut with system clipboard\12  (setq select-enable-clipboard t)\12\12")) 0] #48# 1] [[[nil nil #50=(section (:standard-properties [4185 4185 4185 4267 4267 0 nil section element t nil 4185 4267 nil nil nil nil #49#])) 0] [nil nil #14# 0] (src-block (:standard-properties [4185 4185 nil nil 4267 1 nil planning element t nil nil nil nil nil nil nil #50#] :language #26# :switches nil :parameters nil :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "  (provide 'init-ui)\12  ;;; init-ui.el ends here\12")) 0] [nil [nil nil #54=(plain-list (:standard-properties [4312 4312 4312 4436 4436 0 nil planning element t nil nil nil nil nil nil #53=((4312 0 "1. " nil nil nil 4335) (4335 0 "2. " nil nil nil 4361) (4361 0 "3. " nil nil nil 4379) (4379 0 "4. " nil nil nil 4399) (4399 0 "5. " nil nil nil 4417) (4417 0 "6. " nil nil nil 4436)) #52=(section (:standard-properties [4312 4312 4312 4436 4436 0 nil section element t nil 4312 4436 nil nil nil nil #51#]))] :type ordered)) 0] #52# 1] #51# 0] #49# 1] #47# 0] [[[[nil nil (item (:standard-properties [4335 4335 4338 4361 4361 0 #55=(:tag) item element t nil nil nil nil nil nil #53# #54#] :bullet #65="2. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [nil nil (item (:standard-properties [4379 4379 4382 4399 4399 0 #55# item element t nil nil nil nil nil nil #53# #54#] :bullet "4. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] (item (:standard-properties [4361 4361 4364 4379 4379 0 #55# item element t nil nil nil nil nil nil #53# #54#] :bullet #62="3. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [[nil nil (item (:standard-properties [4417 4417 4420 4436 4436 0 #55# item element t nil nil nil nil nil nil #53# #54#] :bullet "6. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [nil nil #56# 0] #15# 0] (item (:standard-properties [4399 4399 4402 4417 4417 0 #55# item element t nil nil nil nil nil nil #53# #54#] :bullet "5. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [[[nil nil #57# 0] [nil nil #60=(section (:standard-properties [4613 4613 4613 4643 4643 0 nil section element t nil 4613 4643 nil nil nil nil #58#])) 0] #58# 0] [[nil nil (item (:standard-properties [4613 4613 4616 4621 4621 0 #55# item element t nil nil nil nil nil nil #59=((4613 0 "1. " nil nil nil 4621) (4621 0 "2. " nil nil nil 4633) (4633 0 "3. " nil nil nil 4643)) #61=(plain-list (:standard-properties [4613 4613 4613 4643 4643 0 nil planning element t nil nil nil nil nil nil #59# #60#] :type ordered))] :bullet #66="1. " :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [[nil nil (item (:standard-properties [4633 4633 4636 4643 4643 0 #55# item element t nil nil nil nil nil nil #59# #61#] :bullet #62# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] [nil nil #63# 0] #64# 0] (item (:standard-properties [4621 4621 4624 4633 4633 0 #55# item element t nil nil nil nil nil nil #59# #61#] :bullet #65# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 1] #61# 1] #16# 1] (item (:standard-properties [4312 4312 4315 4335 4335 0 #55# item element t nil nil nil nil nil nil #53# #54#] :bullet #66# :checkbox nil :counter nil :pre-blank 0 :tag nil)) 0] #67# 0] nil nil 0] org-element--cache-compare)) ((version "2.3")))